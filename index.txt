userModel
- fullName
- email
- password
- cart - array
- isAdmin - boolean
- orders - array
- contactNumber - number
- picture - db

cart: {
    type: Array,
    default: []
} OR []

--------------------------------------------
productModel
- image
- name
- price - number
- discount
-bgColor - string
- panelColor
- textColor

discount: {
    default: 0
}

-----------------------------------------------
ownerModel

fullName,
email,
password,
products,
picture,
gstin
-------------------------------------------------

mongoose-connection.js > export krna hai mongoose.connecton

ownerRouter - "/"
userRouter - "/"
productRouter - "/"

--------------------------------------------------
set environment variable through command line to development (NODE_ENV) process.env.NODE_ENV
setx NODE_ENV development

--------------------------------------------------------------
config > development.json > {"key": "value"} 
npm i config > config.get("keyName")


admin.ejs
--------------------------------------------------------------

ownerRoute > for development environment create "/create" route, if doc greater than 0 in owner collection than return error with status code 500 and else create a document with fullName, email and password.

---------------------------------------------------------------
copied ejs and images file from google drive page.

-----------------------------------------------------------------

tailwindCss :- border-[1px], flex, items-center, capitalize.
    Resarch: justify-center, autocomplete="off" in form, 

    <%- include('path of file') %> // to include header and footer of a page in ejs files.

------------------------------------------------------------------------------
isAdmin flag remove krna hai.................
userRouter.js mein > "/" pr index render krna hai.......
- "/register"  - create new user (fullName, email, password) - joi based validation lagani hai,password bcrypt krna hai, token set krna hai with the help of jsonwebtoken and cookie-parser, hum jwt mein expiresIn ka use bhi kr skte hai as a 3rd argument.

- jwt token ka secret humein config mein key.js mein rkhna hai jiski value .env file se milegi
- jwt generateToken ka code humein utilities mein generateJWT.js mein likhna hai....
- users shouldn't have same email
---------------------------------------
LOGin route create krna hai user mien hi

------------------------------------------------------------------------------

2 new packages app.js mein express-session and flash and inse related thoda code add krna hai jaise resave, unitialize and one more thing.

isLoggedIn bnana hai middleware mein wahan pr req.flash ka use krna hai, res.redirect ka bhi and req.user mein user ka sara data bhejna hai except password.

sath mein "/" route mein req.flash("error") hoga toh humein index render krnte hue send krna hai

ek new route bnaya hai index.js krke aur wahan se index ko render kr rhe hai 

-------------------------------------------------------------------------------

isLoggedIn > .select("-password") - done

routes > index > /shop pr shop waala page render krna hai and isLoggedIn middleware ka use krna hai  - done

after login it should redirect to shop page - done

Q.  login register agar success hai toh us case mein kya krna hai

/owners/admin - (render krna hai createProducts waala page.) admin creating products ka page. Submit pr /products/create pr redirect krna hai 

(/products/create) - form(multer) product create krna hai with the use of productModel and image upload krni hai. create flash message success, "product created success" and redirect to /owners/admin. All code will be in try catch...

/owners/admin mein hum ek variable create krenge success jiski value flash message successs se aayegi and usein render krte hue bhej denge.

createProucts waale ejs page mein humein flash message ko top mein display krwana hai ki product created success.

productSchema mein Image ki type Buffer
config > multer-config.js 
{
    upload using memoryStorage
    const storage = multer.memoryStorage()
    const upload = multer({ storage: storage })
    export krna hai upload ko.
}


req.file.buffer

/shop mein humein sabhi products find krne hai aur redirect krte hue send krne hai.

----- shop.ejs mein --- 
{
1. flex-items start gap-5 waale div mein ek div ko shod kr baaki sabh delete krne hai. 
2. humein products.forEach ka use krke internal div ko uske andar krna hai and real name and price ka use krna hai. bg-yellow-500 waale div mein ek img tag create krna hai. img tag ki class w-full h-full object-cover.
3. img src mein "data:image/jpeg;base64, <%= product.image.toString('base64') %>
4. img waale div ke niche waale div mein bg-[<%= product.panelColor %>] and same for textColor 
5. bgColor waale flag ka bhi use krna hai forEach se niche jo div hai usmein.
}